class Solution {
public:
    bool canPartition(vector<int>& nums) {
        vector<int> dp(10001, 0);

        int sum = 0;
        for(int i = 0; i< nums.size(); i++) {
            sum += nums[i];
        }
        if (sum % 2 == 1) return false;
        int target = sum / 2;

        cout << "target: " << target << endl;

        for(int i = 0; i < nums.size(); i++) {
            for(int j = target; j >= nums[i]; j--) {
                dp[j] = max(dp[j], dp[j - nums[i]] + nums[i]);
            }
        }
        if (dp[target] == target) return true;
        return false;
    }
};
//runtime:208 ms
//memory:14.6 MB
