/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        deque<TreeNode*> dq;
        vector<vector<int>> res;

        if(root) {
            dq.push_back(root);
        }

        while(!dq.empty()) {
            int size = (int)dq.size();
            vector<int> tmp;
            for(int i= 0; i< size; i++) {
                auto node = dq.front();
                dq.pop_front();
                tmp.push_back(node->val);
                if(node->left) dq.push_back(node->left);
                if(node->right) dq.push_back(node->right);
            }
            res.push_back(tmp);
        }
        reverse(res.begin(), res.end());
        return res;
    }
};
//runtime:0 ms
//memory:12.1 MB
