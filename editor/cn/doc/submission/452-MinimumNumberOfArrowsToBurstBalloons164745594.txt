class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
    if(points.empty()) return 0;

    sort(points.begin(), points.end(), [](vector<int>& a, vector<int>&b) {
        return a[0] < b[0];
    });

//    for(auto s :  points) {
//        cout << s[0] << " " <<s[1] <<endl;
//    }

    int res = 1;
    int prev = points[0][1];
    for(int i = 1; i < points.size(); ++i) {
        if(points[i][0] > prev) {
            res++;
            prev = points[i][1];
        } else {
            prev = min(points[i-1][1], points[i][1]);
        }
    }
    return res;
}
};
//total_testcases:50
//total_correct:20
//input_formatted:[[9,12],[1,10],[4,11],[8,12],[3,9],[6,9],[6,7]]
//expected_output:2
//code_output:1
//last_testcase:[[9,12],[1,10],[4,11],[8,12],[3,9],[6,9],[6,7]]
