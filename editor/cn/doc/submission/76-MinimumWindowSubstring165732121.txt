class Solution {
public:
    // string minWindow(string s, string t) {
    //     vector<int> chars(128,0);
    //     vector<bool> flag(128, false);

    //     for(int i = 0; i< t.size(); i++) {
    //         flag[t[i]] = true;
    //         ++chars[t[i]];
    //     }

    //     int cnt = 0, l = 0, min_l = 0, min_size = s.size() + 1;
    //     for(int r = 0; r< s.size(); r++) {
    //         if(flag[s[r]]) {
    //             if(--chars[s[r]] >= 0) {
    //                 ++cnt;
    //             }
    //         }

    //         while(cnt == t.size()) {
    //             if(r - l + 1 < min_size) {
    //                 min_l = l;
    //                 min_size = r-l+1;
    //             }
    //             if(flag[s[l]] && ++chars[s[l]] > 0) {
    //                 --cnt;
    //             }
                
    //             ++l;
    //         }
    //     }
    //     return min_size > s.size() ? "" : s.substr(min_l, min_size);
    // }

    unordered_map<char, int> ori, cnt;

bool check() {
    for(auto& c : ori) {
        if(cnt[c.first] < c.second)
            return false;
    }
    return true;
}

string minWindow(string s, string t) {
    for(auto c: t) {
        ++ori[c];
    }

    int l = 0, r = 0, min_len = s.size() + 1, min_l = 0;
    for(; r < s.size(); r++) {
        if(ori.find(s[r]) != ori.end()) {
            ++cnt[s[r]];
        }

        while (check() && l <= r) {
            if(r - l + 1 < min_len) {
                min_len = r - l +1;
                min_l = l;
            }

            if(ori.find(s[l]) != ori.end()) {
                --cnt[s[l]];
            }
            ++l;
        }
    }
    return min_len > s.size() ? string() : s.substr(min_l, min_len);
}
};
//runtime:136 ms
//memory:7.6 MB
