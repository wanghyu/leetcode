/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        deque<TreeNode*> dq;
        vector<double> res;
        if(root) dq.push_back(root);

        double sum = 0;
        
        while(!dq.empty()) {
            int size = dq.size();

            for(int i = 0; i < size; i++) {
                auto node = dq.front();
                dq.pop_front();
                sum += node->val;

                if(node->left) dq.push_back(node->left);
                if(node->right) dq.push_back(node->right);
            }
            res.push_back(sum/ size);
            sum = 0;
        }
        return res;
    }
};
//runtime:16 ms
//memory:22 MB
